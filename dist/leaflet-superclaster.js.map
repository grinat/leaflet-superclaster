{"version":3,"sources":["webpack://leaflet-superclaster/webpack/universalModuleDefinition","webpack://leaflet-superclaster/webpack/bootstrap","webpack://leaflet-superclaster/external {\"commonjs\":\"leaflet\",\"commonjs2\":\"leaflet\",\"amd\":\"leaflet\",\"root\":\"L\"}","webpack://leaflet-superclaster/./src/Supercluster.worker.js","webpack://leaflet-superclaster/./node_modules/worker-loader/dist/workers/InlineWorker.js","webpack://leaflet-superclaster/./src/supercluster.scss?cb2e","webpack://leaflet-superclaster/./src/WorkerMessageManager.js","webpack://leaflet-superclaster/./src/SuperclusterGroup.js"],"names":["module","exports","require","__webpack_public_path__","WorkerMessageManager","onEnd","onWait","_toSend","_onEnd","_onWait","message","cb","action","data","clusterId","push","length","shift","lastCb","pop","isEmpty","SuperclusterGroup","L","extend","options","clusterIconFunc","pointIconFunc","optimizeRedraw","appendChildIdsToCluster","showClustersOnMaxZoom","showedSubClusterMultiplier","showMarkersBeforeMaxZoom","bboxIncreasePer","moveToLastKept","moveToLastKeptBoundsMultiplier","clusterzIndexOffset","pointzIndexOffset","maxMarkersInClusterOnOnePoint","animated","spiderfyDistanceMultiplier","log","legsStyle","weight","color","supercluster","radius","extent","minZoom","maxZoom","map","reduce","_geoJsonLayer","_worker","_map","_keptPointIds","_workerMessageManager","_initWorker","fire","SuperclusterWorker","onmessage","d","_onWorkerMessage","onerror","e","console","group","time","receive","features","_drawItems","zoom","_clusteringData","_expansionZoom","_openCluster","checkQueue","timeEnd","groupEnd","_sendMessage","send","postMessage","_createGeoJsonLayer","pointToLayer","_pointToLayer","bind","on","_geoJsonClick","layer","_checkAndUnKeepPoint","_checkAndKeepPoint","_addClassToIcon","_deleteLayerFromGeoJsonLayer","l","_recursiveRemoveAllOpenedClusterLayer","removeLayer","latlng","feature","properties","cluster","isMaxZoom","getZoom","getMaxZoom","cluster_id","clusterOpened","_openedClusterLayer","_closeCluster","_onPointClick","parentLayer","_zoomEnd","_moveEnd","bounds","getBounds","bbox","getWest","getSouth","getEast","getNorth","keptPointIds","loadGeoJsonData","featuresOrFutureCollection","clean","Array","isArray","subCluster","keepPoint","id","unKeepPoint","indexOf","warn","filter","v","layers","getLayers","lastId","find","_getDistanceFromMapCenter","distMin","getLatLng","toBounds","lastInView","contains","setView","getCenter","currentZoom","len","forEach","addData","addMarkerFeaturesMap","addClustersFeaturesMap","gLen","i","composite_id","lLen","_removeOrUpdateLayer","Object","values","featureIdMap","propKey","setLatLng","geometry","coordinates","point_count","setIcon","_updateMarkersInOpenedClusterLayer","isCluster","zIndexOffset","icon","_clusterIconFunc","className","html","iconSize","iconAnchor","_pointIconFunc","initialize","opt","hasOwnProperty","assign","onAdd","getMinZoom","addTo","onRemove","off","clearLayers","_removeClassFromIcon","_updateMarkersInCluster","legs","subLayers","subLen","_segmentFeaturesForLayer","segmentalFeatures","featuresForCreate","_createMarkersInCluster","style","_toggleSubCluster","subL","_closeSubCluster","_openSubCluster","center","centerEast","lat","distCenterToEast","distanceTo","centerNorth","lng","distCenterToNorth","parentCenter","_segmentFeatures","_getLegsForMarkersInCluster","sort","a","b","subClusterCount","Math","ceil","_createSpiral","subClusters","featuresInSubCluster","slice","type","isSubCluster","spiralLengthFactor","spiralFootSeparation","spiralLengthStart","centerPt","latLngToLayerPoint","pi2","PI","count","separation","lengthFactor","legLength","angle","p","coords","newFeatures","x","cos","y","sin","_round","layerPointToLatLng","parentCenterGeometry","name","_icon","classList","add","remove"],"mappings":"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","file":"leaflet-superclaster.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"leaflet\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"leaflet\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"leaflet-superclaster\"] = factory(require(\"leaflet\"));\n\telse\n\t\troot[\"leaflet-superclaster\"] = factory(root[\"L\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = function() {\n  return require(\"!!/home/rinat/WebstormProjects/leaflet-superclaster/node_modules/worker-loader/dist/workers/InlineWorker.js\")(\"/******/ (function(modules) { // webpackBootstrap\\n/******/ \\t// The module cache\\n/******/ \\tvar installedModules = {};\\n/******/\\n/******/ \\t// The require function\\n/******/ \\tfunction __webpack_require__(moduleId) {\\n/******/\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tif(installedModules[moduleId]) {\\n/******/ \\t\\t\\treturn installedModules[moduleId].exports;\\n/******/ \\t\\t}\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = installedModules[moduleId] = {\\n/******/ \\t\\t\\ti: moduleId,\\n/******/ \\t\\t\\tl: false,\\n/******/ \\t\\t\\texports: {}\\n/******/ \\t\\t};\\n/******/\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n/******/\\n/******/ \\t\\t// Flag the module as loaded\\n/******/ \\t\\tmodule.l = true;\\n/******/\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t}\\n/******/\\n/******/\\n/******/ \\t// expose the modules object (__webpack_modules__)\\n/******/ \\t__webpack_require__.m = modules;\\n/******/\\n/******/ \\t// expose the module cache\\n/******/ \\t__webpack_require__.c = installedModules;\\n/******/\\n/******/ \\t// define getter function for harmony exports\\n/******/ \\t__webpack_require__.d = function(exports, name, getter) {\\n/******/ \\t\\tif(!__webpack_require__.o(exports, name)) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n/******/ \\t\\t}\\n/******/ \\t};\\n/******/\\n/******/ \\t// define __esModule on exports\\n/******/ \\t__webpack_require__.r = function(exports) {\\n/******/ \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n/******/ \\t\\t}\\n/******/ \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n/******/ \\t};\\n/******/\\n/******/ \\t// create a fake namespace object\\n/******/ \\t// mode & 1: value is a module id, require it\\n/******/ \\t// mode & 2: merge all properties of value into the ns\\n/******/ \\t// mode & 4: return value when already ns object\\n/******/ \\t// mode & 8|1: behave like require\\n/******/ \\t__webpack_require__.t = function(value, mode) {\\n/******/ \\t\\tif(mode & 1) value = __webpack_require__(value);\\n/******/ \\t\\tif(mode & 8) return value;\\n/******/ \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n/******/ \\t\\tvar ns = Object.create(null);\\n/******/ \\t\\t__webpack_require__.r(ns);\\n/******/ \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n/******/ \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n/******/ \\t\\treturn ns;\\n/******/ \\t};\\n/******/\\n/******/ \\t// getDefaultExport function for compatibility with non-harmony modules\\n/******/ \\t__webpack_require__.n = function(module) {\\n/******/ \\t\\tvar getter = module && module.__esModule ?\\n/******/ \\t\\t\\tfunction getDefault() { return module['default']; } :\\n/******/ \\t\\t\\tfunction getModuleExports() { return module; };\\n/******/ \\t\\t__webpack_require__.d(getter, 'a', getter);\\n/******/ \\t\\treturn getter;\\n/******/ \\t};\\n/******/\\n/******/ \\t// Object.prototype.hasOwnProperty.call\\n/******/ \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n/******/\\n/******/ \\t// __webpack_public_path__\\n/******/ \\t__webpack_require__.p = \\\"/\\\";\\n/******/\\n/******/\\n/******/ \\t// Load entry module and return exports\\n/******/ \\treturn __webpack_require__(__webpack_require__.s = 0);\\n/******/ })\\n/************************************************************************/\\n/******/ ([\\n/* 0 */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n\\n// CONCATENATED MODULE: ./node_modules/kdbush/src/sort.js\\n\\nfunction sortKD(ids, coords, nodeSize, left, right, depth) {\\n    if (right - left <= nodeSize) return;\\n\\n    const m = (left + right) >> 1;\\n\\n    sort_select(ids, coords, m, left, right, depth % 2);\\n\\n    sortKD(ids, coords, nodeSize, left, m - 1, depth + 1);\\n    sortKD(ids, coords, nodeSize, m + 1, right, depth + 1);\\n}\\n\\nfunction sort_select(ids, coords, k, left, right, inc) {\\n\\n    while (right > left) {\\n        if (right - left > 600) {\\n            const n = right - left + 1;\\n            const m = k - left + 1;\\n            const z = Math.log(n);\\n            const s = 0.5 * Math.exp(2 * z / 3);\\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\\n            sort_select(ids, coords, k, newLeft, newRight, inc);\\n        }\\n\\n        const t = coords[2 * k + inc];\\n        let i = left;\\n        let j = right;\\n\\n        swapItem(ids, coords, left, k);\\n        if (coords[2 * right + inc] > t) swapItem(ids, coords, left, right);\\n\\n        while (i < j) {\\n            swapItem(ids, coords, i, j);\\n            i++;\\n            j--;\\n            while (coords[2 * i + inc] < t) i++;\\n            while (coords[2 * j + inc] > t) j--;\\n        }\\n\\n        if (coords[2 * left + inc] === t) swapItem(ids, coords, left, j);\\n        else {\\n            j++;\\n            swapItem(ids, coords, j, right);\\n        }\\n\\n        if (j <= k) left = j + 1;\\n        if (k <= j) right = j - 1;\\n    }\\n}\\n\\nfunction swapItem(ids, coords, i, j) {\\n    swap(ids, i, j);\\n    swap(coords, 2 * i, 2 * j);\\n    swap(coords, 2 * i + 1, 2 * j + 1);\\n}\\n\\nfunction swap(arr, i, j) {\\n    const tmp = arr[i];\\n    arr[i] = arr[j];\\n    arr[j] = tmp;\\n}\\n\\n// CONCATENATED MODULE: ./node_modules/kdbush/src/range.js\\n\\nfunction range(ids, coords, minX, minY, maxX, maxY, nodeSize) {\\n    const stack = [0, ids.length - 1, 0];\\n    const result = [];\\n    let x, y;\\n\\n    while (stack.length) {\\n        const axis = stack.pop();\\n        const right = stack.pop();\\n        const left = stack.pop();\\n\\n        if (right - left <= nodeSize) {\\n            for (let i = left; i <= right; i++) {\\n                x = coords[2 * i];\\n                y = coords[2 * i + 1];\\n                if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[i]);\\n            }\\n            continue;\\n        }\\n\\n        const m = Math.floor((left + right) / 2);\\n\\n        x = coords[2 * m];\\n        y = coords[2 * m + 1];\\n\\n        if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[m]);\\n\\n        const nextAxis = (axis + 1) % 2;\\n\\n        if (axis === 0 ? minX <= x : minY <= y) {\\n            stack.push(left);\\n            stack.push(m - 1);\\n            stack.push(nextAxis);\\n        }\\n        if (axis === 0 ? maxX >= x : maxY >= y) {\\n            stack.push(m + 1);\\n            stack.push(right);\\n            stack.push(nextAxis);\\n        }\\n    }\\n\\n    return result;\\n}\\n\\n// CONCATENATED MODULE: ./node_modules/kdbush/src/within.js\\n\\nfunction within(ids, coords, qx, qy, r, nodeSize) {\\n    const stack = [0, ids.length - 1, 0];\\n    const result = [];\\n    const r2 = r * r;\\n\\n    while (stack.length) {\\n        const axis = stack.pop();\\n        const right = stack.pop();\\n        const left = stack.pop();\\n\\n        if (right - left <= nodeSize) {\\n            for (let i = left; i <= right; i++) {\\n                if (sqDist(coords[2 * i], coords[2 * i + 1], qx, qy) <= r2) result.push(ids[i]);\\n            }\\n            continue;\\n        }\\n\\n        const m = Math.floor((left + right) / 2);\\n\\n        const x = coords[2 * m];\\n        const y = coords[2 * m + 1];\\n\\n        if (sqDist(x, y, qx, qy) <= r2) result.push(ids[m]);\\n\\n        const nextAxis = (axis + 1) % 2;\\n\\n        if (axis === 0 ? qx - r <= x : qy - r <= y) {\\n            stack.push(left);\\n            stack.push(m - 1);\\n            stack.push(nextAxis);\\n        }\\n        if (axis === 0 ? qx + r >= x : qy + r >= y) {\\n            stack.push(m + 1);\\n            stack.push(right);\\n            stack.push(nextAxis);\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nfunction sqDist(ax, ay, bx, by) {\\n    const dx = ax - bx;\\n    const dy = ay - by;\\n    return dx * dx + dy * dy;\\n}\\n\\n// CONCATENATED MODULE: ./node_modules/kdbush/src/index.js\\n\\n\\n\\n\\n\\nconst defaultGetX = p => p[0];\\nconst defaultGetY = p => p[1];\\n\\nclass src_KDBush {\\n    constructor(points, getX = defaultGetX, getY = defaultGetY, nodeSize = 64, ArrayType = Float64Array) {\\n        this.nodeSize = nodeSize;\\n        this.points = points;\\n\\n        const IndexArrayType = points.length < 65536 ? Uint16Array : Uint32Array;\\n\\n        const ids = this.ids = new IndexArrayType(points.length);\\n        const coords = this.coords = new ArrayType(points.length * 2);\\n\\n        for (let i = 0; i < points.length; i++) {\\n            ids[i] = i;\\n            coords[2 * i] = getX(points[i]);\\n            coords[2 * i + 1] = getY(points[i]);\\n        }\\n\\n        sortKD(ids, coords, nodeSize, 0, ids.length - 1, 0);\\n    }\\n\\n    range(minX, minY, maxX, maxY) {\\n        return range(this.ids, this.coords, minX, minY, maxX, maxY, this.nodeSize);\\n    }\\n\\n    within(x, y, r) {\\n        return within(this.ids, this.coords, x, y, r, this.nodeSize);\\n    }\\n}\\n\\n// CONCATENATED MODULE: ./node_modules/supercluster/index.js\\n\\n\\n\\nconst defaultOptions = {\\n    minZoom: 0,   // min zoom to generate clusters on\\n    maxZoom: 16,  // max zoom level to cluster the points on\\n    radius: 40,   // cluster radius in pixels\\n    extent: 512,  // tile extent (radius is calculated relative to it)\\n    nodeSize: 64, // size of the KD-tree leaf node, affects performance\\n    log: false,   // whether to log timing info\\n\\n    // a reduce function for calculating custom cluster properties\\n    reduce: null, // (accumulated, props) => { accumulated.sum += props.sum; }\\n\\n    // properties to use for individual points when running the reducer\\n    map: props => props // props => ({sum: props.my_value})\\n};\\n\\nclass supercluster_Supercluster {\\n    constructor(options) {\\n        this.options = extend(Object.create(defaultOptions), options);\\n        this.trees = new Array(this.options.maxZoom + 1);\\n    }\\n\\n    load(points) {\\n        const {log, minZoom, maxZoom, nodeSize} = this.options;\\n\\n        if (log) console.time('total time');\\n\\n        const timerId = `prepare ${  points.length  } points`;\\n        if (log) console.time(timerId);\\n\\n        this.points = points;\\n\\n        // generate a cluster object for each point and index input points into a KD-tree\\n        let clusters = [];\\n        for (let i = 0; i < points.length; i++) {\\n            if (!points[i].geometry) continue;\\n            clusters.push(createPointCluster(points[i], i));\\n        }\\n        this.trees[maxZoom + 1] = new src_KDBush(clusters, supercluster_getX, supercluster_getY, nodeSize, Float32Array);\\n\\n        if (log) console.timeEnd(timerId);\\n\\n        // cluster points on max zoom, then cluster the results on previous zoom, etc.;\\n        // results in a cluster hierarchy across zoom levels\\n        for (let z = maxZoom; z >= minZoom; z--) {\\n            const now = +Date.now();\\n\\n            // create a new set of clusters for the zoom and index them with a KD-tree\\n            clusters = this._cluster(clusters, z);\\n            this.trees[z] = new src_KDBush(clusters, supercluster_getX, supercluster_getY, nodeSize, Float32Array);\\n\\n            if (log) console.log('z%d: %d clusters in %dms', z, clusters.length, +Date.now() - now);\\n        }\\n\\n        if (log) console.timeEnd('total time');\\n\\n        return this;\\n    }\\n\\n    getClusters(bbox, zoom) {\\n        let minLng = ((bbox[0] + 180) % 360 + 360) % 360 - 180;\\n        const minLat = Math.max(-90, Math.min(90, bbox[1]));\\n        let maxLng = bbox[2] === 180 ? 180 : ((bbox[2] + 180) % 360 + 360) % 360 - 180;\\n        const maxLat = Math.max(-90, Math.min(90, bbox[3]));\\n\\n        if (bbox[2] - bbox[0] >= 360) {\\n            minLng = -180;\\n            maxLng = 180;\\n        } else if (minLng > maxLng) {\\n            const easternHem = this.getClusters([minLng, minLat, 180, maxLat], zoom);\\n            const westernHem = this.getClusters([-180, minLat, maxLng, maxLat], zoom);\\n            return easternHem.concat(westernHem);\\n        }\\n\\n        const tree = this.trees[this._limitZoom(zoom)];\\n        const ids = tree.range(lngX(minLng), latY(maxLat), lngX(maxLng), latY(minLat));\\n        const clusters = [];\\n        for (const id of ids) {\\n            const c = tree.points[id];\\n            clusters.push(c.numPoints ? getClusterJSON(c) : this.points[c.index]);\\n        }\\n        return clusters;\\n    }\\n\\n    getChildren(clusterId) {\\n        const originId = clusterId >> 5;\\n        const originZoom = clusterId % 32;\\n        const errorMsg = 'No cluster with the specified id.';\\n\\n        const index = this.trees[originZoom];\\n        if (!index) throw new Error(errorMsg);\\n\\n        const origin = index.points[originId];\\n        if (!origin) throw new Error(errorMsg);\\n\\n        const r = this.options.radius / (this.options.extent * Math.pow(2, originZoom - 1));\\n        const ids = index.within(origin.x, origin.y, r);\\n        const children = [];\\n        for (const id of ids) {\\n            const c = index.points[id];\\n            if (c.parentId === clusterId) {\\n                children.push(c.numPoints ? getClusterJSON(c) : this.points[c.index]);\\n            }\\n        }\\n\\n        if (children.length === 0) throw new Error(errorMsg);\\n\\n        return children;\\n    }\\n\\n    getLeaves(clusterId, limit, offset) {\\n        limit = limit || 10;\\n        offset = offset || 0;\\n\\n        const leaves = [];\\n        this._appendLeaves(leaves, clusterId, limit, offset, 0);\\n\\n        return leaves;\\n    }\\n\\n    getTile(z, x, y) {\\n        const tree = this.trees[this._limitZoom(z)];\\n        const z2 = Math.pow(2, z);\\n        const {extent, radius} = this.options;\\n        const p = radius / extent;\\n        const top = (y - p) / z2;\\n        const bottom = (y + 1 + p) / z2;\\n\\n        const tile = {\\n            features: []\\n        };\\n\\n        this._addTileFeatures(\\n            tree.range((x - p) / z2, top, (x + 1 + p) / z2, bottom),\\n            tree.points, x, y, z2, tile);\\n\\n        if (x === 0) {\\n            this._addTileFeatures(\\n                tree.range(1 - p / z2, top, 1, bottom),\\n                tree.points, z2, y, z2, tile);\\n        }\\n        if (x === z2 - 1) {\\n            this._addTileFeatures(\\n                tree.range(0, top, p / z2, bottom),\\n                tree.points, -1, y, z2, tile);\\n        }\\n\\n        return tile.features.length ? tile : null;\\n    }\\n\\n    getClusterExpansionZoom(clusterId) {\\n        let clusterZoom = (clusterId % 32) - 1;\\n        while (clusterZoom <= this.options.maxZoom) {\\n            const children = this.getChildren(clusterId);\\n            clusterZoom++;\\n            if (children.length !== 1) break;\\n            clusterId = children[0].properties.cluster_id;\\n        }\\n        return clusterZoom;\\n    }\\n\\n    _appendLeaves(result, clusterId, limit, offset, skipped) {\\n        const children = this.getChildren(clusterId);\\n\\n        for (const child of children) {\\n            const props = child.properties;\\n\\n            if (props && props.cluster) {\\n                if (skipped + props.point_count <= offset) {\\n                    // skip the whole cluster\\n                    skipped += props.point_count;\\n                } else {\\n                    // enter the cluster\\n                    skipped = this._appendLeaves(result, props.cluster_id, limit, offset, skipped);\\n                    // exit the cluster\\n                }\\n            } else if (skipped < offset) {\\n                // skip a single point\\n                skipped++;\\n            } else {\\n                // add a single point\\n                result.push(child);\\n            }\\n            if (result.length === limit) break;\\n        }\\n\\n        return skipped;\\n    }\\n\\n    _addTileFeatures(ids, points, x, y, z2, tile) {\\n        for (const i of ids) {\\n            const c = points[i];\\n            const f = {\\n                type: 1,\\n                geometry: [[\\n                    Math.round(this.options.extent * (c.x * z2 - x)),\\n                    Math.round(this.options.extent * (c.y * z2 - y))\\n                ]],\\n                tags: c.numPoints ? getClusterProperties(c) : this.points[c.index].properties\\n            };\\n            const id = c.numPoints ? c.id : this.points[c.index].id;\\n            if (id !== undefined) {\\n                f.id = id;\\n            }\\n            tile.features.push(f);\\n        }\\n    }\\n\\n    _limitZoom(z) {\\n        return Math.max(this.options.minZoom, Math.min(z, this.options.maxZoom + 1));\\n    }\\n\\n    _cluster(points, zoom) {\\n        const clusters = [];\\n        const {radius, extent, reduce} = this.options;\\n        const r = radius / (extent * Math.pow(2, zoom));\\n\\n        // loop through each point\\n        for (let i = 0; i < points.length; i++) {\\n            const p = points[i];\\n            // if we've already visited the point at this zoom level, skip it\\n            if (p.zoom <= zoom) continue;\\n            p.zoom = zoom;\\n\\n            // find all nearby points\\n            const tree = this.trees[zoom + 1];\\n            const neighborIds = tree.within(p.x, p.y, r);\\n\\n            let numPoints = p.numPoints || 1;\\n            let wx = p.x * numPoints;\\n            let wy = p.y * numPoints;\\n\\n            const clusterProperties = reduce ? this._map(p, true) : null;\\n\\n            // encode both zoom and point index on which the cluster originated\\n            const id = (i << 5) + (zoom + 1);\\n\\n            for (const neighborId of neighborIds) {\\n                const b = tree.points[neighborId];\\n                // filter out neighbors that are already processed\\n                if (b.zoom <= zoom) continue;\\n                b.zoom = zoom; // save the zoom (so it doesn't get processed twice)\\n\\n                const numPoints2 = b.numPoints || 1;\\n                wx += b.x * numPoints2; // accumulate coordinates for calculating weighted center\\n                wy += b.y * numPoints2;\\n\\n                numPoints += numPoints2;\\n                b.parentId = id;\\n\\n                if (reduce) {\\n                    reduce(clusterProperties, this._map(b));\\n                }\\n            }\\n\\n            if (numPoints === 1) {\\n                clusters.push(p);\\n            } else {\\n                p.parentId = id;\\n                clusters.push(createCluster(wx / numPoints, wy / numPoints, id, numPoints, clusterProperties));\\n            }\\n        }\\n\\n        return clusters;\\n    }\\n\\n    _map(point, clone) {\\n        if (point.numPoints) {\\n            return clone ? extend({}, point.properties) : point.properties;\\n        }\\n        const original = this.points[point.index].properties;\\n        const result = this.options.map(original);\\n        return clone && result === original ? extend({}, result) : result;\\n    }\\n}\\n\\nfunction createCluster(x, y, id, numPoints, properties) {\\n    return {\\n        x, // weighted cluster center\\n        y,\\n        zoom: Infinity, // the last zoom the cluster was processed at\\n        id, // encodes index of the first child of the cluster and its zoom level\\n        parentId: -1, // parent cluster id\\n        numPoints,\\n        properties\\n    };\\n}\\n\\nfunction createPointCluster(p, id) {\\n    const [x, y] = p.geometry.coordinates;\\n    return {\\n        x: lngX(x), // projected point coordinates\\n        y: latY(y),\\n        zoom: Infinity, // the last zoom the point was processed at\\n        index: id, // index of the source feature in the original input array,\\n        parentId: -1 // parent cluster id\\n    };\\n}\\n\\nfunction getClusterJSON(cluster) {\\n    return {\\n        type: 'Feature',\\n        id: cluster.id,\\n        properties: getClusterProperties(cluster),\\n        geometry: {\\n            type: 'Point',\\n            coordinates: [xLng(cluster.x), yLat(cluster.y)]\\n        }\\n    };\\n}\\n\\nfunction getClusterProperties(cluster) {\\n    const count = cluster.numPoints;\\n    const abbrev =\\n        count >= 10000 ? `${Math.round(count / 1000)  }k` :\\n        count >= 1000 ? `${Math.round(count / 100) / 10  }k` : count;\\n    return extend(extend({}, cluster.properties), {\\n        cluster: true,\\n        cluster_id: cluster.id,\\n        point_count: count,\\n        point_count_abbreviated: abbrev\\n    });\\n}\\n\\n// longitude/latitude to spherical mercator in [0..1] range\\nfunction lngX(lng) {\\n    return lng / 360 + 0.5;\\n}\\nfunction latY(lat) {\\n    const sin = Math.sin(lat * Math.PI / 180);\\n    const y = (0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI);\\n    return y < 0 ? 0 : y > 1 ? 1 : y;\\n}\\n\\n// spherical mercator to longitude/latitude\\nfunction xLng(x) {\\n    return (x - 0.5) * 360;\\n}\\nfunction yLat(y) {\\n    const y2 = (180 - y * 360) * Math.PI / 180;\\n    return 360 * Math.atan(Math.exp(y2)) / Math.PI - 90;\\n}\\n\\nfunction extend(dest, src) {\\n    for (const id in src) dest[id] = src[id];\\n    return dest;\\n}\\n\\nfunction supercluster_getX(p) {\\n    return p.x;\\n}\\nfunction supercluster_getY(p) {\\n    return p.y;\\n}\\n\\n// CONCATENATED MODULE: ./src/Supercluster.worker.js\\n\\n\\nlet cluster = null\\nlet lastLoadedFeatures = null\\nlet childPointsIdsMap = {}\\nlet clusterHashMap = {}\\n\\nself.onmessage = ({data}) => {\\n  if (data.options.log) {\\n    console.group(data.action)\\n    console.time(data.action)\\n    console.log('workerdata', data)\\n  }\\n\\n  switch (data.action) {\\n    case 'loadFeatures':\\n      loadFeatures(data.data, data.options)\\n      break\\n    case 'clusteringData':\\n      clusteringData(data.data, data.options)\\n      break\\n    case 'expansionZoom':\\n      expansionZoom(data.data)\\n      break\\n    case 'pointsInCluster':\\n      pointsInCluster(data.data)\\n      break\\n  }\\n\\n  if (data.options.log) {\\n    console.timeEnd(data.action)\\n    console.groupEnd(data.action)\\n  }\\n}\\n\\nfunction pointsInCluster({clusterId}) {\\n  const features = cluster.getLeaves(clusterId, Infinity)\\n\\n  sendMessage('pointsInCluster', {\\n    features,\\n    clusterId\\n  })\\n}\\n\\nfunction expansionZoom({clusterId, latlng}) {\\n  const zoom = cluster.getClusterExpansionZoom(clusterId)\\n  sendMessage('expansionZoom', {\\n    latlng,\\n    zoom,\\n    clusterId\\n  })\\n}\\n\\n/**\\n * @link https://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\\n * @param str\\n * @returns {number}\\n */\\nfunction getHashOfString(str) {\\n  let hash = 0\\n  let i\\n  let chr\\n  if (str.length === 0) return hash\\n  for (i = 0; i < str.length; i++) {\\n    chr   = str.charCodeAt(i)\\n    hash  = ((hash << 5) - hash) + chr\\n    hash |= 0 // Convert to 32bit integer\\n  }\\n  return hash\\n}\\n\\nfunction sendMessage (action, data = {}) {\\n  data.action = action\\n  postMessage(data)\\n}\\n\\nfunction clusteringData({keptPointIds = [], bbox, zoom}, {log, bboxIncreasePer, appendChildIdsToCluster, optimizeRedraw}) {\\n  if (!cluster) {\\n    sendMessage('clusteringData', {\\n      features: null\\n    })\\n    return\\n  }\\n\\n  // зап  юг вост север\\n  const [w, s, e, n] = bbox\\n\\n  let ewLen = (e - w) * bboxIncreasePer\\n  if (ewLen < 0) ewLen = ewLen * -1\\n  let nsLen = (n - s) * bboxIncreasePer\\n  if (nsLen < 0) nsLen = nsLen * -1\\n\\n  const increasedBbox = [\\n    w - ewLen,\\n    s - nsLen,\\n    e + ewLen,\\n    n + nsLen\\n  ]\\n\\n  const features = cluster.getClusters(increasedBbox, zoom)\\n  const hasKeptPoints = keptPointIds.length > 0\\n  const grabChild = appendChildIdsToCluster || optimizeRedraw\\n\\n  const fLen = features.length\\n  const ids = []\\n  for (let i = 0; i < fLen; i++) {\\n    features[i].properties.composite_id = features[i].properties.cluster_id\\n\\n    if (features[i].properties.cluster && grabChild === true) {\\n      childPointsIdsMap[features[i].properties.cluster_id] = childPointsIdsMap[features[i].properties.cluster_id] || getChildPointsIds(features[i].properties.cluster_id)\\n      const childIds = childPointsIdsMap[features[i].properties.cluster_id]\\n\\n      if (appendChildIdsToCluster === true) {\\n        features[i].properties.childIds = childIds\\n      }\\n\\n      if (optimizeRedraw === true) {\\n        clusterHashMap[features[i].properties.composite_id] = features[i].properties.composite_id || getHashOfString(\\n          childIds.sort().join(';')\\n        ).toString()\\n        features[i].properties.composite_id = clusterHashMap[features[i].properties.composite_id]\\n      }\\n\\n      if (hasKeptPoints === true) {\\n        // TODO to for\\n        keptPointIds.forEach(id => {\\n          if (childIds.indexOf(id) > -1) {\\n            features[i].properties.point_count--\\n          }\\n        })\\n      }\\n    }\\n\\n    if (features[i].properties.id) {\\n      ids.push(features[i].properties.id)\\n    }\\n  }\\n\\n  if (grabChild) {\\n    // TODO to for\\n    keptPointIds.forEach(id => {\\n      if (ids.indexOf(id) === -1 && lastLoadedFeatures) {\\n        // find point and return as feature\\n        const len = lastLoadedFeatures.length\\n        for (let i = 0; i < len; i++) {\\n          if (lastLoadedFeatures[i].properties.id === id) {\\n            features.push(lastLoadedFeatures[i])\\n            break\\n          }\\n        }\\n      }\\n    })\\n  }\\n\\n  log && console.log('single markers ids', ids, 'keptPointIds', keptPointIds)\\n\\n  sendMessage('clusteringData', {\\n    features,\\n    zoom,\\n    bbox\\n  })\\n}\\n\\nfunction getChildPointsIds(clusterId) {\\n  if (childPointsIdsMap[clusterId]) {\\n    return childPointsIdsMap[clusterId]\\n  }\\n\\n  const ids = []\\n\\n  const stack = [clusterId]\\n  while (stack.length) {\\n    const id = stack.pop()\\n    const childs = cluster.getChildren(id)\\n\\n    childs.forEach(children => {\\n      if (children.properties.cluster) {\\n        stack.push(children.properties.cluster_id)\\n      } else {\\n        ids.push(children.properties.id)\\n      }\\n    })\\n  }\\n\\n  childPointsIdsMap[clusterId] = ids\\n\\n  return childPointsIdsMap[clusterId]\\n}\\n\\nfunction loadFeatures({features = []}, {supercluster}) {\\n  // converts string functions body from options to function\\n  if (supercluster.map) {\\n    supercluster.map = new Function('props', supercluster.map)\\n  } else {\\n    delete supercluster.map\\n  }\\n  if (supercluster.reduce) {\\n    supercluster.reduce = new Function('accumulated', 'props', supercluster.reduce)\\n  } else {\\n    delete supercluster.reduce\\n  }\\n\\n  cluster = new supercluster_Supercluster(supercluster)\\n  cluster.load(features)\\n  lastLoadedFeatures = features\\n  childPointsIdsMap = {}\\n  clusterHashMap = {}\\n  sendMessage('loadFeatures')\\n}\\n\\n\\n\\n/***/ })\\n/******/ ]);\\n//# sourceMappingURL=leaflet-superclaster.worker.js.map\", __webpack_public_path__ + \"leaflet-superclaster.worker.js\");\n};","'use strict';\n\n// http://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\nvar URL = window.URL || window.webkitURL;\n\nmodule.exports = function (content, url) {\n  try {\n    try {\n      var blob;\n\n      try {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\n        blob = new BlobBuilder();\n\n        blob.append(content);\n\n        blob = blob.getBlob();\n      } catch (e) {\n        // The proposed API\n        blob = new Blob([content]);\n      }\n\n      return new Worker(URL.createObjectURL(blob));\n    } catch (e) {\n      return new Worker('data:application/javascript,' + encodeURIComponent(content));\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error('Inline worker is not supported');\n    }\n\n    return new Worker(url);\n  }\n};","// extracted by mini-css-extract-plugin","export class WorkerMessageManager {\n  constructor ({onEnd = () => '', onWait = () => ''} = {}) {\n    this._toSend = {}\n    this._onEnd = onEnd\n    this._onWait = onWait\n  }\n\n  send (message, cb) {\n    const action = `${message.action}.${message.data.clusterId || ''}`\n\n    if (!this._toSend[action]) {\n      this._toSend[action] = []\n    }\n\n    // cb()\n    this._toSend[action].push(cb)\n\n    if (this._toSend[action].length === 1) {\n      // if only one item - execute\n      cb()\n    }\n  }\n\n  receive (message) {\n    const action = `${message.action}.${message.clusterId || ''}`\n\n    if (!this._toSend[action]) {\n      this._toSend[action] = []\n    }\n\n    // remove executed\n    this._toSend[action].shift()\n\n    if (this._toSend[action].length > 0) {\n      // if we have many items, execute only last\n      // others - drop\n      const lastCb = this._toSend[action].pop()\n      this._toSend[action] = [lastCb]\n      lastCb()\n    }\n  }\n\n  /**\n   * Call cb in no data for send to workers\n   * or data exist\n   */\n  checkQueue() {\n    let isEmpty = true\n    for (const action in this._toSend) {\n      if (this._toSend[action].length > 0) {\n        isEmpty = false\n        break\n      }\n    }\n\n    if (isEmpty === true) {\n      this._onEnd()\n    } else {\n      this._onWait()\n    }\n  }\n\n  clean () {\n    this._toSend = {}\n  }\n}\n","import * as L from 'leaflet'\n// import SuperclusterWorker from 'worker-loader!./SuperclusterWorker'\n// eslint-disable-next-line import/default\nimport SuperclusterWorker from './Supercluster.worker'\nimport {WorkerMessageManager} from './WorkerMessageManager'\n\nimport './supercluster.scss'\n\nexport const SuperclusterGroup = L.SuperclusterGroup = L.FeatureGroup.extend({\n  options: {\n    clusterIconFunc: null,\n    pointIconFunc: null,\n    optimizeRedraw: true,\n    appendChildIdsToCluster: false,\n    showClustersOnMaxZoom: true,\n    showedSubClusterMultiplier: 2,\n    showMarkersBeforeMaxZoom: 1,\n    bboxIncreasePer: 0,\n    moveToLastKept: false,\n    moveToLastKeptBoundsMultiplier: 0.3,\n    clusterzIndexOffset: 1000,\n    pointzIndexOffset: 8000,\n    maxMarkersInClusterOnOnePoint: 250,\n    animated: false,\n    spiderfyDistanceMultiplier: 0.8,\n    log: false,\n    legsStyle: {\n      weight: 1,\n      color: '#707070'\n    },\n    supercluster: {\n      radius: 60,\n      extent: 180,\n      minZoom: null,\n      maxZoom: null,\n      log: false,\n      map: null, // you can pass function as string `return {sum: props.myValue}`\n      reduce: null, // you can pass function as string `accumulated.sum += props.sum`\n    }\n  },\n  _geoJsonLayer: null,\n  _worker: null,\n  _map: null,\n  _keptPointIds: [],\n  _workerMessageManager: null,\n  _initWorker () {\n    this._workerMessageManager = new WorkerMessageManager({\n      onEnd: () => this.fire('end'),\n      onWait: () => this.fire('wait')\n    })\n    this._worker = new SuperclusterWorker()\n    this._worker.onmessage = (d) => this._onWorkerMessage(d)\n    this._worker.onerror = e => this.fire('error', e)\n  },\n  _onWorkerMessage ({data}) {\n    if (this.options.log) {\n      console.group(data.action)\n      console.time(data.action)\n      console.log('workerdata', data)\n    }\n\n    this._workerMessageManager.receive(data)\n\n    if (!this._map) {\n      return\n    }\n\n    switch (data.action) {\n      case 'clusteringData':\n        if (data.features) {\n          this._drawItems(data.features, data.zoom)\n        }\n        break\n      case 'loadFeatures':\n        this._clusteringData(data)\n        break\n      case 'expansionZoom':\n        this._expansionZoom(data)\n        break\n      case 'pointsInCluster':\n        this._openCluster(data)\n        break\n    }\n\n    this._workerMessageManager.checkQueue()\n\n    if (this.options.log) {\n      console.timeEnd(data.action)\n      console.groupEnd(data.action)\n    }\n  },\n  _sendMessage (action, data = {}) {\n    const message = {\n      action,\n      data,\n      options: {\n        bboxIncreasePer: this.options.bboxIncreasePer,\n        optimizeRedraw: this.options.optimizeRedraw,\n        supercluster: this.options.supercluster,\n        log: this.options.log\n      }\n    }\n    this._workerMessageManager.send(message, () => {\n      this._worker.postMessage(message)\n    })\n    this._workerMessageManager.checkQueue()\n  },\n  _createGeoJsonLayer () {\n    this._geoJsonLayer = L.geoJson(null, {\n      pointToLayer: this._pointToLayer.bind(this)\n    })\n\n    this._geoJsonLayer.on('click', this._geoJsonClick, this)\n\n    this._geoJsonLayer.on('layerremove', ({layer}) => {\n      this._checkAndUnKeepPoint(layer)\n    })\n    this._geoJsonLayer.on('popupclose', ({layer}) => {\n      this._checkAndUnKeepPoint(layer)\n    })\n    this._geoJsonLayer.on('popupopen', ({layer}) => {\n      this._checkAndKeepPoint(layer)\n    })\n\n    if (this.options.animated === true) {\n      this._geoJsonLayer.on('layeradd', ({layer}) => {\n        this._addClassToIcon(layer, 'animate-add')\n      })\n    }\n  },\n  _deleteLayerFromGeoJsonLayer (l) {\n    this._recursiveRemoveAllOpenedClusterLayer(l)\n\n    this._geoJsonLayer.removeLayer(l)\n  },\n  _geoJsonClick ({latlng, layer}) {\n    if (layer.feature.properties.cluster) {\n      // on cluster click\n      const isMaxZoom = this._map.getZoom() >= this._map.getMaxZoom()\n      const clusterId = layer.feature.properties.cluster_id\n      const clusterOpened = !!layer._openedClusterLayer\n\n      if (clusterOpened) {\n        this._closeCluster(layer)\n      } else if (isMaxZoom === true) {\n        this._sendMessage('pointsInCluster', {\n          clusterId\n        })\n      } else {\n        this._sendMessage('expansionZoom', {\n          clusterId,\n          latlng\n        })\n      }\n    } else {\n      this._onPointClick(null, layer)\n    }\n  },\n  /**\n   * @param parentLayer - exist if click by marker in subcluster\n   * @param layer - marker layer\n   * @private\n   */\n  _onPointClick (parentLayer, layer) {\n    this.fire('point.click', {parentLayer, layer})\n  },\n  _zoomEnd () {\n    this._clusteringData()\n  },\n  _moveEnd () {\n    this._clusteringData()\n  },\n  _clusteringData () {\n    const bounds = this._map.getBounds()\n    const bbox = [bounds.getWest(), bounds.getSouth(), bounds.getEast(), bounds.getNorth()]\n    const zoom = this._map.getZoom()\n\n    this._sendMessage('clusteringData', {\n      zoom,\n      bbox,\n      keptPointIds: this._keptPointIds\n    })\n  },\n  loadGeoJsonData (featuresOrFutureCollection) {\n    this._workerMessageManager.clean()\n\n    let features = []\n    if (Array.isArray(featuresOrFutureCollection)) {\n      features = featuresOrFutureCollection\n    } else {\n      features = featuresOrFutureCollection.features\n    }\n\n    this._sendMessage('loadFeatures', {features})\n  },\n  _checkAndKeepPoint (layer) {\n    if (layer instanceof L.Marker && !layer.feature.properties.subCluster) {\n      this.keepPoint(layer.feature.properties.id)\n    }\n  },\n  _checkAndUnKeepPoint (layer) {\n    if (layer instanceof L.Marker && !layer.feature.properties.subCluster) {\n      this.unKeepPoint(layer.feature.properties.id)\n    }\n  },\n  keepPoint (id) {\n    if (this._keptPointIds.indexOf(id) > -1) {\n      return\n    }\n    this.options.log && console.log('keepPoint', id)\n    this._keptPointIds.push(id)\n\n    if (!this.options.optimizeRedraw) {\n      console.warn('keepPoint worked only if optimizeRedraw=true')\n    }\n  },\n  unKeepPoint (id) {\n    if (this._keptPointIds.length > 0) {\n      this.options.log && console.log('unKeepPoint', id)\n      this._keptPointIds = this._keptPointIds.filter(v => v !== id)\n      // if we click on point is kept\n      // if we minimize zoom, kep point remove from cluster\n      // we need recalc cluster for get correct cluster size\n      this._clusteringData()\n    }\n  },\n  moveToLastKept () {\n    this.options.log && console.log('move to last')\n    const layers = this._geoJsonLayer.getLayers()\n\n    const lastId = this._keptPointIds[this._keptPointIds.length - 1]\n    if (!lastId) {\n      return\n    }\n\n    const layer = layers.find(l => l.feature.properties.id === lastId)\n    if (!layer) {\n      return\n    }\n\n    const {distMin} = this._getDistanceFromMapCenter()\n    const bounds = L.latLngBounds(layer.getLatLng().toBounds(distMin * this.options.moveToLastKeptBoundsMultiplier))\n    const lastInView = this._map.getBounds().contains(bounds)\n\n    if (!lastInView) {\n      this._map.setView(bounds.getCenter())\n    }\n  },\n  _expansionZoom ({latlng, zoom}) {\n    this._map.setView(latlng, zoom)\n  },\n  _drawItems (features, zoom) {\n    const currentZoom = this._map.getZoom()\n    if (currentZoom !== zoom) {\n      // skip redraw data if user fast change zoom\n      return\n    }\n\n    const layers = this._geoJsonLayer.getLayers()\n    const len = layers.length\n\n    if (this.options.optimizeRedraw === false || len === 0) {\n      // for remove all clusters and subclusters\n      layers.forEach(l => {\n        this._deleteLayerFromGeoJsonLayer(l)\n      })\n      this._geoJsonLayer.addData(features)\n    } else {\n      const addMarkerFeaturesMap = {}\n      const addClustersFeaturesMap = {}\n\n      // create new features map\n      const gLen = features.length\n      for (let i = 0; i < gLen; i++) {\n        if (features[i].properties.cluster) {\n          addClustersFeaturesMap[features[i].properties.composite_id] = features[i]\n        } else {\n          addMarkerFeaturesMap[features[i].properties.id] = features[i]\n        }\n      }\n\n      // remove or update\n      const lLen = layers.length\n      for (let i = 0; i < lLen; i++) {\n        const l = layers[i]\n\n        if (l.feature.properties.cluster) {\n          this._removeOrUpdateLayer(\n            l,\n            addClustersFeaturesMap,\n            'composite_id'\n          )\n        } else {\n          this._removeOrUpdateLayer(\n            l,\n            addMarkerFeaturesMap,\n            'id'\n          )\n        }\n      }\n\n      // add clusters\n      this._geoJsonLayer.addData(Object.values(addClustersFeaturesMap))\n\n      // add markers to map\n      this._geoJsonLayer.addData(Object.values(addMarkerFeaturesMap))\n    }\n\n    this.options.moveToLastKept && this.moveToLastKept()\n\n    this.fire('draw', {layer: this._geoJsonLayer})\n  },\n  _removeOrUpdateLayer (l, featureIdMap, propKey) {\n    const id = l.feature.properties[propKey]\n    if (featureIdMap[id]) {\n      // update marker pos\n      l.setLatLng(\n        new L.LatLng(featureIdMap[id].geometry.coordinates[1], featureIdMap[id].geometry.coordinates[0])\n      )\n\n      if (l.feature.properties.cluster && l.feature.properties.point_count !== featureIdMap[id].properties.point_count) {\n        // update feature info\n        l.feature = featureIdMap[id]\n\n        // update icon with count\n        l.setIcon(this.options.clusterIconFunc(l.feature))\n      } else {\n        // update feature info\n        l.feature = featureIdMap[id]\n      }\n\n      // remove marker from featureMap\n      delete featureIdMap[id]\n\n      this.fire('layer.updated', {layer: l})\n\n      this.options.animated && this._addClassToIcon(l, 'animate-move')\n\n      this._updateMarkersInOpenedClusterLayer(l)\n    } else {\n      // layer not exist in featureMap\n      this._deleteLayerFromGeoJsonLayer(l)\n    }\n  },\n  _pointToLayer (feature, latlng) {\n    const isCluster = feature.properties.subCluster || feature.properties.cluster\n\n    if (isCluster) {\n      return L.marker(latlng, {\n        zIndexOffset: this.options.clusterzIndexOffset,\n        icon: this.options.clusterIconFunc(feature, latlng)\n      })\n    }\n\n    return L.marker(latlng, {\n      zIndexOffset: this.options.pointzIndexOffset,\n      icon: this.options.pointIconFunc(feature, latlng)\n    })\n  },\n  _clusterIconFunc (feature) {\n    return new L.DivIcon({\n      className: 'supercluster',\n      html: `<div class=\"cluster-icon\">${feature.properties.point_count}</div>`,\n      iconSize: [44, 44],\n      iconAnchor: [22, 22]\n    })\n  },\n  _pointIconFunc () {\n    return new L.DivIcon({\n      className: 'supercluster',\n      html: '<div class=\"point-icon\"><div class=\"pulsate\"></div></div>',\n      iconSize: [14, 14],\n      iconAnchor: [7, 7]\n    })\n  },\n  /**\n   * @override\n   */\n  initialize (options = {}) {\n    for (const opt in options) {\n      if (this.options.hasOwnProperty(opt)) {\n        if (this.options[opt] instanceof Object) {\n          this.options[opt] = Object.assign(this.options[opt], options[opt])\n        } else {\n          this.options[opt] = options[opt]\n        }\n      }\n    }\n\n    this.options.clusterIconFunc = options.clusterIconFunc || this._clusterIconFunc\n    this.options.pointIconFunc = options.pointIconFunc || this._pointIconFunc\n\n    this._keptPointIds = []\n\n    this._initWorker()\n  },\n  /**\n   * @override\n   */\n  onAdd (map) {\n    this._map = map\n\n    if (!this.options.supercluster.maxZoom) {\n      this.options.supercluster.maxZoom = this._map.getMaxZoom()\n\n      if (!this.options.showClustersOnMaxZoom) {\n        this.options.supercluster.maxZoom = this._map.getMaxZoom() - this.options.showMarkersBeforeMaxZoom\n      }\n    }\n\n    if (!this.options.supercluster.minZoom) {\n      this.options.supercluster.minZoom = this._map.getMinZoom()\n    }\n\n    this._createGeoJsonLayer()\n    this._geoJsonLayer.addTo(this._map)\n\n    this._map.on('zoomend', this._zoomEnd, this)\n    this._map.on('moveend', this._moveEnd, this)\n\n    this._clusteringData()\n  },\n  /**\n   * @override\n   */\n  onRemove (map) {\n    map.off('zoomend', this._zoomEnd, this)\n    map.off('moveend', this._moveEnd, this)\n\n    this._geoJsonLayer.clearLayers()\n  },\n  _updateMarkersInOpenedClusterLayer (layer) {\n    if (!layer._openedClusterLayer) {\n      return\n    }\n\n    // refresh all markers\n    const clusterId = layer.feature.properties.cluster_id\n    this._sendMessage('pointsInCluster', {\n      clusterId\n    })\n  },\n  _closeCluster (layer) {\n    this._recursiveRemoveAllOpenedClusterLayer(layer)\n\n    this._removeClassFromIcon(layer, 'opened')\n  },\n  _updateMarkersInCluster (parentLayer, features, legs) {\n    // create map from exist features\n    const featureIdMap = {}\n\n    const len = features.length\n    for (let i = 0; i < len; i++) {\n      featureIdMap[features[i].properties.id] = features[i]\n    }\n\n    // update or remove marker positions\n    const subLayers = parentLayer._openedClusterLayer.getLayers()\n    const subLen = subLayers.length\n    for (let i = 0; i < subLen; i++) {\n      const l = subLayers[i]\n      const id = l.feature.properties.id\n\n      if (featureIdMap[id]) {\n        l.setLatLng(\n          new L.LatLng(featureIdMap[id].geometry.coordinates[1], featureIdMap[id].geometry.coordinates[0])\n        )\n        l.feature = featureIdMap[id]\n        this.fire('layer.updated', {layer: l})\n\n        // try to update data in subcluster\n        if (l._openedClusterLayer && l.feature.properties.features) {\n          // create spiral or subcluster in subcluster\n          const {segmentalFeatures, legs} = this._segmentFeaturesForLayer(l, l.feature.properties.features)\n\n          this._updateMarkersInCluster(l, segmentalFeatures, legs)\n        } else {\n          // if in new markers not segments - remove\n          this._recursiveRemoveAllOpenedClusterLayer(l)\n\n          // mark as closed\n          this._removeClassFromIcon(l, 'opened')\n        }\n\n        // if marker updated - remove from map\n        delete featureIdMap[id]\n      } else {\n        this._recursiveRemoveAllOpenedClusterLayer(l)\n        parentLayer._openedClusterLayer.removeLayer(l)\n      }\n    }\n\n    // insert markers which not exist in subLayers\n    const featuresForCreate = Object.values(featureIdMap)\n\n    parentLayer._openedClusterLayer.addData([\n      ...featuresForCreate, ...legs\n    ])\n  },\n  _createMarkersInCluster (parentLayer, features, legs) {\n    parentLayer._openedClusterLayer = L.geoJson([\n      ...features, ...legs\n    ], {\n      pointToLayer: this._pointToLayer.bind(this),\n      // we draw line from cluster center to point set style for that\n      style: this.options.legsStyle\n    }).addTo(this._map)\n\n    parentLayer._openedClusterLayer.on('click', ({layer}) => {\n      // detect is a point\n      if (layer instanceof L.Marker) {\n        if (layer.feature.properties.subCluster) {\n          this._toggleSubCluster(layer)\n        } else {\n          this._onPointClick(parentLayer, layer)\n        }\n      }\n      // else it could be path to points\n    })\n  },\n  _recursiveRemoveAllOpenedClusterLayer (l) {\n    if (l._openedClusterLayer)  {\n      const layers = l._openedClusterLayer.getLayers()\n      layers.forEach(subL => {\n        this._recursiveRemoveAllOpenedClusterLayer(subL)\n        l._openedClusterLayer.removeLayer(subL)\n      })\n\n      this._map.removeLayer(l._openedClusterLayer)\n      l._openedClusterLayer = null\n    }\n  },\n  _toggleSubCluster (layer) {\n    if (layer._openedClusterLayer) {\n      this._closeSubCluster(layer)\n    } else {\n      this._openSubCluster(layer, layer.feature.properties.features)\n    }\n  },\n  _openCluster ({clusterId, features}) {\n    const layers = this._geoJsonLayer.getLayers()\n\n    const parentLayer = layers.find(l => l.feature.properties.cluster_id === clusterId)\n    if (!parentLayer) {\n      return\n    }\n\n    const {segmentalFeatures, legs} = this._segmentFeaturesForLayer(parentLayer, features)\n\n    if (parentLayer._openedClusterLayer) {\n      this._updateMarkersInCluster(parentLayer, segmentalFeatures, legs)\n    } else {\n      this._createMarkersInCluster(parentLayer, segmentalFeatures, legs)\n    }\n\n    this._addClassToIcon(parentLayer, 'opened')\n  },\n  _closeSubCluster (parentLayer) {\n    if (!parentLayer._openedClusterLayer) {\n      return\n    }\n\n    this._map.removeLayer(parentLayer._openedClusterLayer)\n    parentLayer._openedClusterLayer = null\n\n    this._removeClassFromIcon(parentLayer, 'opened')\n  },\n  _openSubCluster (parentLayer, features) {\n    const {segmentalFeatures, legs} = this._segmentFeaturesForLayer(parentLayer, features)\n\n    if (parentLayer._openedClusterLayer) {\n      this._updateMarkersInCluster(parentLayer, segmentalFeatures, legs)\n    } else {\n      this._createMarkersInCluster(parentLayer, segmentalFeatures, legs)\n    }\n\n    this._addClassToIcon(parentLayer, 'opened')\n  },\n  _getDistanceFromMapCenter () {\n    const center = this._map.getCenter()\n    const bounds =  this._map.getBounds()\n\n    const centerEast = L.latLng(center.lat, bounds.getEast())\n    const distCenterToEast = center.distanceTo(centerEast)\n\n    const centerNorth = L.latLng(bounds.getNorth(), center.lng)\n    const distCenterToNorth = center.distanceTo(centerNorth)\n\n    const distMin = distCenterToEast > distCenterToNorth ? distCenterToNorth : distCenterToEast\n\n    this.options.log && console.log({distCenterToEast, distCenterToNorth, distMin})\n\n    return {distCenterToEast, distCenterToNorth, distMin}\n  },\n  _segmentFeaturesForLayer (parentLayer, features) {\n    const parentCenter = parentLayer.getLatLng()\n\n    const segmentalFeatures = this._segmentFeatures(features, parentCenter)\n\n    const legs = this._getLegsForMarkersInCluster(parentCenter, segmentalFeatures)\n\n    return {segmentalFeatures, legs}\n  },\n  _segmentFeatures (features, parentCenter) {\n    // we need to align data by id sor saving order\n    // and prevent popup rotate\n    features.sort((a, b) => {\n      if (a.properties.id > b.properties.id) {\n        return 1\n      }\n      if (a.properties.id < b.properties.id) {\n        return -1\n      }\n      return 0\n    })\n\n    const len = features.length\n    const maxMarkersInClusterOnOnePoint = this.options.maxMarkersInClusterOnOnePoint\n    const subClusterCount = Math.ceil(len / maxMarkersInClusterOnOnePoint)\n\n    if (len <= maxMarkersInClusterOnOnePoint) {\n      return this._createSpiral(features, parentCenter)\n    }\n\n    // build points for subcluster\n    const subClusters = []\n    for (let i = 0; i < subClusterCount; i++) {\n      const featuresInSubCluster = features.slice(i * maxMarkersInClusterOnOnePoint, (i + 1) * maxMarkersInClusterOnOnePoint)\n      subClusters.push({\n        type: 'Feature',\n        properties: {\n          id: `sub_${i}`,\n          subCluster: true,\n          point_count: featuresInSubCluster.length,\n          features: featuresInSubCluster\n        },\n        geometry: {\n          type:'Point',\n          coordinates: []\n        }\n      })\n    }\n\n    return this._createSpiral(subClusters, parentCenter, true)\n  },\n  /**\n   * @source https://github.com/Leaflet/Leaflet.markercluster/blob/74c766be3aa962a062010b520ca9c982bd13cfb0/src/MarkerCluster.Spiderfier.js#L74\n   */\n  _createSpiral (features, parentCenter, isSubCluster = false) {\n    const spiralLengthFactor = 5\n    const spiderfyDistanceMultiplier = this.options.spiderfyDistanceMultiplier * (isSubCluster ? this.options.showedSubClusterMultiplier : 1)\n    const spiralFootSeparation = 28\n    const spiralLengthStart = 11\n\n    const centerPt = this._map.latLngToLayerPoint(parentCenter)\n\n    const pi2 = Math.PI * 2\n    const count = features.length\n    const separation = spiderfyDistanceMultiplier * spiralFootSeparation\n    const lengthFactor = spiderfyDistanceMultiplier * spiralLengthFactor * pi2\n    let legLength = spiderfyDistanceMultiplier * spiralLengthStart\n    let angle = 0\n    let i\n    let p\n    let coords\n\n    const newFeatures = []\n\n    // Higher index, closer position to cluster center.\n    for (i = count; i >= 0; i--) {\n      // Skip the first position, so that we are already farther from center and we avoid\n      // being under the default cluster icon (especially important for Circle Markers).\n      if (i < count) {\n        p = new L.Point(centerPt.x + legLength * Math.cos(angle), centerPt.y + legLength * Math.sin(angle))._round()\n        coords = this._map.layerPointToLatLng(p)\n        features[i].geometry.coordinates = [\n          coords.lng,\n          coords.lat,\n        ]\n        newFeatures.push(features[i])\n      }\n      angle += separation / legLength + i * 0.0005\n      legLength += lengthFactor / angle\n    }\n    return newFeatures\n  },\n  _getLegsForMarkersInCluster (parentCenter, features) {\n    const parentCenterGeometry = [parentCenter.lng, parentCenter.lat]\n\n    const legs = []\n    const len = features.length\n    for (let i = 0; i < len; i++) {\n      legs.push({\n        type: 'LineString',\n        coordinates: [\n          features[i].geometry.coordinates, parentCenterGeometry\n        ]\n      })\n    }\n\n    return legs\n  },\n  _addClassToIcon (l, name) {\n    if (l._icon && l._icon.classList) {\n      l._icon.classList.add(name)\n    }\n  },\n  _removeClassFromIcon (l, name) {\n    if (l._icon && l._icon.classList) {\n      l._icon.classList.remove(name)\n    }\n  }\n})\n\n"],"sourceRoot":""}